{"version":3,"sources":["firebase.js","components/map/api.js","store/actions.js","components/map/config.js","components/map/index.js","components/map/layers.js","components/line-graph/index.js","components/timeline/index.js","components/opacity-slider/index.js","components/title.js","pages/home.js","App.js","serviceWorker.js","store/initialState.js","store/index.js","store/reducer.js","index.js"],"names":["db","require","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Api","dispatch","useDispatch","useEffect","collection","orderBy","get","then","querySnapshot","data","docs","map","doc","type","updateMaps","updatePopulation","VENICE_VIEW_STATE","latitude","longitude","zoom","minZoom","pitch","bearing","Map","useSelector","state","maps","selectedMap","opacity","initialViewState","controller","layers","filter","prevUrl","i","tile","urls","j","replace","push","TileLayer","id","visible","year","maxZoom","tileSize","renderSubLayers","props","bbox","west","south","east","north","BitmapLayer","image","bounds","getLayers","mapboxApiAccessToken","LineGraph","population","point","x","y","style","height","marginBottom","MyResponsiveLine","margin","top","bottom","right","left","xScale","min","max","xFormat","yScale","stacked","reverse","yFormat","axisTop","enableArea","areaBaselineValue","lineWidth","enableSlices","axisRight","axisBottom","axisLeft","colors","enablePoints","enableGridX","enableGridY","crosshairType","TimelineSlider","withStyles","root","color","markLabel","fontSize","mark","width","marginTop","Slider","Timeline","years","minYear","Math","maxYear","marks","value","label","length","position","marginLeft","marginRight","display","flexDirection","defaultValue","onChange","e","valueLabelFormat","valueLabelDisplay","step","track","StyledOpacitySlider","OpacitySlider","round","getAriaValueText","aria-labelledby","StyledTitle","Typography","StyledCreator","Title","curMap","find","el","creator","origin","title","Home","App","className","Boolean","window","location","hostname","match","initialState","reduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","action","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3691063d.chunk.js","sourcesContent":["import \"firebase/firestore\";\n\nconst firebase = require(\"firebase/app\");\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: \"maps-of-venice.firebaseapp.com\",\n  databaseURL: \"https://maps-of-venice.firebaseio.com\",\n  projectId: \"maps-of-venice\",\n  storageBucket: \"maps-of-venice.appspot.com\",\n  messagingSenderId: \"1004145915620\",\n  appId: \"1:1004145915620:web:bb706ab87a353cf8eb5ef1\",\n  measurementId: \"G-CYE960RYD9\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst db = firebaseApp.firestore();\n\nexport { db };\n","import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { updateMaps, updatePopulation } from \"../../store/actions\";\nimport { db } from \"../../firebase\";\n\nexport default function Api() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    db.collection(\"maps\")\n      .orderBy(\"year\")\n      .get()\n      .then((querySnapshot) => {\n        const data = querySnapshot.docs.map((doc) => doc.data());\n        dispatch(updateMaps(data));\n      });\n\n    db.collection(\"population\")\n      .orderBy(\"year\")\n      .get()\n      .then((querySnapshot) => {\n        const data = querySnapshot.docs.map((doc) => doc.data());\n        dispatch(updatePopulation(data));\n      });\n  }, [dispatch]);\n\n  return null;\n}\n","export const UPDATE_MAPS = \"UPDATE_MAPS\";\nexport function updateMaps(data) {\n  return { type: UPDATE_MAPS, data };\n}\n\nexport const UPDATE_POPULATION = \"UPDATE_POPULATION\";\nexport function updatePopulation(data) {\n  return { type: UPDATE_POPULATION, data };\n}\n\nexport const UPDATE_SELECTED_MAP = \"UPDATE_SELECTED_MAP\";\nexport function updateSelectedMap(data) {\n  return { type: UPDATE_SELECTED_MAP, data };\n}\n\nexport const UPDATE_OPACITY = \"UPDATE_OPACITY\";\nexport function updateOpacity(data) {\n  return { type: UPDATE_OPACITY, data };\n}\n","export const MAPBOX_TOKEN = process.env.REACT_APP_MAPBOX_TOKEN;\n\nexport const VENICE_VIEW_STATE = {\n  latitude: 45.437545,\n  longitude: 12.333794,\n  zoom: 13,\n  minZoom: 10,\n  pitch: 0,\n  bearing: 0,\n};\n","import React from \"react\";\nimport DeckGL from \"@deck.gl/react\";\nimport { useSelector } from \"react-redux\";\nimport { StaticMap } from \"react-map-gl\";\nimport Api from \"./api\";\nimport getLayers from \"./layers\";\nimport { MAPBOX_TOKEN, VENICE_VIEW_STATE } from \"./config\";\n\nexport default function Map() {\n  const { maps, selectedMap, opacity } = useSelector((state) => state);\n\n  const _getLayers = () => {\n    return getLayers({ data: maps, filter: selectedMap, opacity });\n  };\n\n  return (\n    <div>\n      <DeckGL\n        initialViewState={VENICE_VIEW_STATE}\n        controller={true}\n        layers={_getLayers()}\n      >\n        <StaticMap mapboxApiAccessToken={MAPBOX_TOKEN} />\n      </DeckGL>\n      <Api />\n    </div>\n  );\n}\n","import { TileLayer } from \"@deck.gl/geo-layers\";\nimport { BitmapLayer } from \"@deck.gl/layers\";\n\nexport default function getLayers({ data, filter, opacity }) {\n  const layers = [];\n\n  for (var i in data) {\n    const prevUrl = data[i].tile;\n    const urls = [0, 1, 2, 3].map((j) => {\n      return prevUrl.replace(\n        \"https://maps.georeferencer.com/georeferences/\",\n        `https://maps-${j}.georeferencer.com//georeferences/`\n      );\n    });\n\n    layers.push(\n      new TileLayer({\n        id: i,\n        data: urls,\n        visible: data[i].year === filter,\n\n        minZoom: 0,\n        maxZoom: 19,\n        tileSize: 256,\n        opacity,\n\n        renderSubLayers: (props) => {\n          const {\n            bbox: { west, south, east, north },\n          } = props.tile;\n\n          return new BitmapLayer(props, {\n            data: null,\n            image: props.data,\n            bounds: [west, south, east, north],\n          });\n        },\n      })\n    );\n  }\n\n  return layers;\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ResponsiveLine } from \"@nivo/line\";\n\nexport default function LineGraph(props) {\n  const { population } = useSelector((state) => state);\n  const data = [\n    {\n      id: \"Population\",\n      data: population.map((point) => ({ x: point.year, y: point.population })),\n    },\n  ];\n\n  return (\n    <div\n      style={{\n        height: 150,\n        marginBottom: -13,\n      }}\n    >\n      <MyResponsiveLine data={data} />\n    </div>\n  );\n}\n\nconst MyResponsiveLine = ({ data }) => (\n  <ResponsiveLine\n    data={data}\n    margin={{ top: 0, bottom: 0, right: 0, left: 0 }}\n    xScale={{ type: \"linear\", min: 1603, max: 1920 }}\n    xFormat={\".0f\"}\n    yScale={{\n      type: \"linear\",\n      min: 90000,\n      max: \"auto\",\n      stacked: true,\n      reverse: false,\n    }}\n    yFormat={\".3s\"}\n    axisTop={null}\n    enableArea\n    areaBaselineValue={90000}\n    lineWidth={2}\n    enableSlices={\"x\"}\n    axisRight={null}\n    axisBottom={null}\n    axisLeft={null}\n    colors={\"#17bdff\"}\n    enablePoints={false}\n    enableGridX={false}\n    enableGridY={false}\n    crosshairType={\"bottom\"}\n  />\n);\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateSelectedMap } from \"../../store/actions\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport LineGraph from \"../line-graph\";\n\nconst TimelineSlider = withStyles({\n  root: {\n    color: \"#17bdff\",\n    height: 4,\n  },\n  markLabel: {\n    fontSize: 14,\n  },\n  mark: {\n    width: 2,\n    height: 5,\n    marginTop: -2,\n  },\n})(Slider);\n\nexport default function Timeline() {\n  const dispatch = useDispatch();\n  const { maps } = useSelector((state) => state);\n\n  const years = maps.map((map) => map.year);\n\n  const minYear = Math.min(...years);\n  const maxYear = Math.max(...years);\n\n  const marks = maps.map((map, i) => ({\n    value: map.year,\n    label:\n      i !== maps.length - 3 &&\n      (i === 0 || i === maps.length - 1 || maps[i - 1].year < map.year - 7)\n        ? map.year\n        : \"\",\n  }));\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        bottom: 200,\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        left: 0,\n        right: 0,\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"80%\",\n        height: 30,\n      }}\n    >\n      <LineGraph />\n      <TimelineSlider\n        defaultValue={1603}\n        onChange={(e, value) => dispatch(updateSelectedMap(value))}\n        valueLabelFormat={(value) => value}\n        valueLabelDisplay=\"auto\"\n        min={minYear}\n        max={maxYear}\n        step={null}\n        marks={marks}\n        track=\"normal\"\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateOpacity } from \"../../store/actions\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Slider from \"@material-ui/core/Slider\";\n\nconst StyledOpacitySlider = withStyles({\n  root: {\n    color: \"#17bdff\",\n    height: 4,\n  },\n})(Slider);\n\nexport default function OpacitySlider() {\n  const dispatch = useDispatch();\n  const { opacity } = useSelector((state) => state);\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: 40,\n        right: 40,\n        display: \"flex\",\n        width: 100,\n        height: 30,\n      }}\n    >\n      <StyledOpacitySlider\n        value={Math.round(opacity * 100)}\n        onChange={(e, value) => dispatch(updateOpacity(value / 100))}\n        getAriaValueText={(value) => value}\n        valueLabelFormat={(value) => value}\n        aria-labelledby=\"slider\"\n        valueLabelDisplay=\"auto\"\n        min={0}\n        max={100}\n        marks\n        track=\"inverted\"\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useSelector } from \"react-redux\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst StyledTitle = withStyles({\n  root: {\n    fontSize: 16,\n  },\n})(Typography);\n\nconst StyledCreator = withStyles({\n  root: {\n    fontSize: 20,\n  },\n})(Typography);\n\nexport default function Title() {\n  const { maps, selectedMap } = useSelector((state) => state);\n  const curMap = maps.find((el) => el.year === selectedMap);\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: 30,\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        left: 0,\n        right: 0,\n        width: \"90%\",\n      }}\n    >\n      <StyledCreator>\n        {curMap &&\n          `${curMap.creator} (${curMap.origin && `${curMap.origin} `}${\n            curMap.year\n          })`}\n      </StyledCreator>\n      <StyledTitle>{curMap && curMap.title}</StyledTitle>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Map from \"../components/map\";\nimport Timeline from \"../components/timeline\";\nimport OpacitySlider from \"../components/opacity-slider\";\nimport Title from \"../components/title\";\n\nexport default function Home() {\n  return (\n    <div>\n      <Map />\n      <Title />\n      <Timeline />\n      <OpacitySlider />\n    </div>\n  );\n}\n","import React from \"react\";\nimport Home from \"./pages/home\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n  maps: [],\n  population: [],\n  selectedMap: 1603,\n  opacity: 0.8,\n};\n\nexport default initialState;\n","import { createStore } from \"redux\";\nimport reducer from \"./reducer\";\n\nconst reduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nconst store = createStore(reducer, reduxDevTools);\n\nexport default store;\n","import {\n  UPDATE_MAPS,\n  UPDATE_SELECTED_MAP,\n  UPDATE_OPACITY,\n  UPDATE_POPULATION,\n} from \"./actions\";\nimport initialState from \"./initialState\";\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_MAPS:\n      return { ...state, maps: action.data };\n    case UPDATE_POPULATION:\n      return { ...state, population: action.data };\n    case UPDATE_SELECTED_MAP:\n      return { ...state, selectedMap: action.data };\n    case UPDATE_OPACITY:\n      return { ...state, opacity: action.data };\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}