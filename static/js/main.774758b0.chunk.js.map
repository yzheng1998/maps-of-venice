{"version":3,"sources":["firebase.js","components/map/api.js","store/actions.js","components/map/config.js","components/tooltip/index.js","components/map/index.js","components/map/layers.js","components/line-graph/index.js","components/timeline/index.js","components/opacity-slider/index.js","components/title.js","components/help/index.js","pages/home.js","App.js","serviceWorker.js","store/initialState.js","store/index.js","store/reducer.js","index.js"],"names":["db","require","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","octokit","Octokit","auth","Api","dispatch","useDispatch","useEffect","collection","orderBy","get","then","querySnapshot","data","docs","map","doc","type","updateMaps","updatePopulation","request","res","JSON","parse","files","content","VENICE_VIEW_STATE","latitude","longitude","zoom","minZoom","pitch","bearing","useStyles","makeStyles","title","color","fontFamily","fontSize","body","Tooltip","hoveredObj","useSelector","state","classes","obj","style","backgroundColor","padding","position","top","y","left","x","Typography","root","properties","name","year","Map","maps","selectedMap","opacity","visible","geojson","onHover","info","object","initialViewState","controller","dragRotate","layers","currentYear","prevUrl","i","tile","urls","j","replace","push","TileLayer","id","maxZoom","tileSize","renderSubLayers","props","bbox","west","south","east","north","BitmapLayer","image","bounds","Object","keys","length","GeoJsonLayer","pickable","getFillColor","d","getLineColor","getLineWidth","lineWidthUnits","updateTriggers","getLayers","mapboxApiAccessToken","LineGraph","population","point","height","marginBottom","MyResponsiveLine","margin","bottom","right","xScale","min","max","xFormat","yScale","stacked","reverse","yFormat","axisTop","enableArea","areaBaselineValue","lineWidth","enableSlices","axisRight","axisBottom","axisLeft","colors","enablePoints","enableGridX","enableGridY","crosshairType","TimelineSlider","withStyles","markLabel","mark","width","marginTop","Slider","Timeline","years","minYear","Math","maxYear","marks","value","label","marginLeft","marginRight","display","flexDirection","defaultValue","onChange","e","valueLabelFormat","valueLabelDisplay","step","track","StyledOpacitySlider","OpacitySlider","round","getAriaValueText","aria-labelledby","StyledTitle","StyledCreator","Title","curMap","find","el","onClick","window","open","source","border","borderRadius","cursor","creator","origin","Home","useState","helpVisible","setHelpVisible","onKeyDown","nativeEvent","key","onKeyUp","App","className","Boolean","location","hostname","match","initialState","reduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","action","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.774758b0.chunk.js","sourcesContent":["import \"firebase/firestore\";\n\nconst firebase = require(\"firebase/app\");\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: \"maps-of-venice.firebaseapp.com\",\n  databaseURL: \"https://maps-of-venice.firebaseio.com\",\n  projectId: \"maps-of-venice\",\n  storageBucket: \"maps-of-venice.appspot.com\",\n  messagingSenderId: \"1004145915620\",\n  appId: \"1:1004145915620:web:bb706ab87a353cf8eb5ef1\",\n  measurementId: \"G-CYE960RYD9\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst db = firebaseApp.firestore();\n\nexport { db };\n","import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  updateMaps,\n  updatePopulation,\n  updateGeojson,\n} from \"../../store/actions\";\nimport { db } from \"../../firebase\";\nimport { Octokit } from \"@octokit/core\";\n\nconst octokit = new Octokit({\n  auth: process.env.REACT_APP_GITHUB_AUTH_KEY,\n});\n\nexport default function Api() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    db.collection(\"maps\")\n      .orderBy(\"year\")\n      .get()\n      .then((querySnapshot) => {\n        const data = querySnapshot.docs.map((doc) => doc.data());\n        dispatch(updateMaps(data));\n      });\n\n    db.collection(\"population\")\n      .orderBy(\"year\")\n      .get()\n      .then((querySnapshot) => {\n        const data = querySnapshot.docs.map((doc) => doc.data());\n        dispatch(updatePopulation(data));\n      });\n\n    octokit\n      .request(\"GET /gists/aa98d983dc8392db28e710e1c888033f\")\n      .then((res) =>\n        dispatch(\n          updateGeojson(JSON.parse(res.data.files[\"map.geojson\"].content))\n        )\n      );\n  }, [dispatch]);\n\n  return null;\n}\n","export const UPDATE_MAPS = \"UPDATE_MAPS\";\nexport function updateMaps(data) {\n  return { type: UPDATE_MAPS, data };\n}\n\nexport const UPDATE_POPULATION = \"UPDATE_POPULATION\";\nexport function updatePopulation(data) {\n  return { type: UPDATE_POPULATION, data };\n}\n\nexport const UPDATE_SELECTED_MAP = \"UPDATE_SELECTED_MAP\";\nexport function updateSelectedMap(data) {\n  return { type: UPDATE_SELECTED_MAP, data };\n}\n\nexport const UPDATE_OPACITY = \"UPDATE_OPACITY\";\nexport function updateOpacity(data) {\n  return { type: UPDATE_OPACITY, data };\n}\n\nexport const TOGGLE_VISIBLE = \"TOGGLE_VISIBLE\";\nexport function toggleVisible() {\n  return { type: TOGGLE_VISIBLE };\n}\n\nexport const UPDATE_GEOJSON = \"UPDATE_GEOJSON\";\nexport function updateGeojson(data) {\n  return { type: UPDATE_GEOJSON, data };\n}\n\nexport const UPDATE_HOVERED_OBJ = \"UPDATE_HOVERED_OBJ\";\nexport function updateHoveredObj(data) {\n  return { type: UPDATE_HOVERED_OBJ, data };\n}\n","export const MAPBOX_TOKEN = process.env.REACT_APP_MAPBOX_TOKEN;\n\nexport const VENICE_VIEW_STATE = {\n  latitude: 45.437545,\n  longitude: 12.333794,\n  zoom: 13,\n  minZoom: 10,\n  pitch: 0,\n  bearing: 0,\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  title: {\n    color: \"#FFFFFF\",\n    fontFamily: \"Avenir\",\n    fontSize: 12,\n  },\n  body: {\n    color: \"#FFFFFF\",\n    fontFamily: \"Avenir\",\n    fontSize: 10,\n  },\n});\n\nexport default function Tooltip() {\n  const { hoveredObj } = useSelector((state) => state);\n\n  const classes = useStyles();\n\n  return (\n    <>\n      {hoveredObj.obj && (\n        <div\n          style={{\n            backgroundColor: \"rgba(46, 46, 46, 0.8)\",\n            padding: 8,\n            position: \"absolute\",\n            top: hoveredObj.y,\n            left: hoveredObj.x,\n          }}\n        >\n          <Typography classes={{ root: classes.title }}>\n            {hoveredObj.obj.properties.name} ({hoveredObj.obj.properties.year})\n          </Typography>\n        </div>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport DeckGL from \"@deck.gl/react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateHoveredObj } from \"../../store/actions\";\nimport { StaticMap } from \"react-map-gl\";\nimport Api from \"./api\";\nimport getLayers from \"./layers\";\nimport { MAPBOX_TOKEN, VENICE_VIEW_STATE } from \"./config\";\nimport Tooltip from \"../tooltip\";\n\nexport default function Map() {\n  const dispatch = useDispatch();\n  const { maps, selectedMap, opacity, visible, geojson } = useSelector(\n    (state) => state\n  );\n\n  const onHover = (info) => {\n    const { x, y, object } = info;\n    if (!object || object.properties.year <= selectedMap) {\n      dispatch(\n        updateHoveredObj({\n          x,\n          y,\n          obj: object,\n        })\n      );\n    }\n  };\n\n  const _getLayers = () => {\n    return getLayers({\n      data: maps,\n      currentYear: selectedMap,\n      opacity,\n      visible,\n      geojson,\n      onHover,\n    });\n  };\n\n  return (\n    <div>\n      <DeckGL\n        initialViewState={VENICE_VIEW_STATE}\n        controller={{\n          dragRotate: false,\n        }}\n        layers={_getLayers()}\n      >\n        <StaticMap mapboxApiAccessToken={MAPBOX_TOKEN} />\n        <Tooltip />\n      </DeckGL>\n      <Api />\n    </div>\n  );\n}\n","import { TileLayer } from \"@deck.gl/geo-layers\";\nimport { BitmapLayer, GeoJsonLayer } from \"@deck.gl/layers\";\n\nexport default function getLayers({\n  data,\n  currentYear,\n  opacity,\n  visible,\n  geojson,\n  onHover,\n}) {\n  const layers = [];\n\n  for (var i in data) {\n    const prevUrl = data[i].tile;\n    const urls = [0, 1, 2, 3].map((j) => {\n      return prevUrl.replace(\n        \"https://maps.georeferencer.com/georeferences/\",\n        `https://maps-${j}.georeferencer.com//georeferences/`\n      );\n    });\n\n    layers.push(\n      new TileLayer({\n        id: i,\n        data: urls,\n        visible: visible && data[i].year === currentYear,\n\n        minZoom: 0,\n        maxZoom: 19,\n        tileSize: 256,\n        opacity,\n\n        renderSubLayers: (props) => {\n          const {\n            bbox: { west, south, east, north },\n          } = props.tile;\n\n          return new BitmapLayer(props, {\n            data: null,\n            image: props.data,\n            bounds: [west, south, east, north],\n          });\n        },\n      })\n    );\n  }\n\n  Object.keys(geojson).length > 0 &&\n    layers.push(\n      new GeoJsonLayer({\n        id: \"geojson\",\n        data: geojson,\n        pickable: true,\n        getFillColor: (d) =>\n          d.properties.year <= currentYear ? [255, 255, 0, 50] : [0, 0, 0, 0],\n        getLineColor: [255, 255, 0, 100],\n        getLineWidth: (d) => (d.properties.year <= currentYear ? 2 : 0),\n        lineWidthUnits: \"pixels\",\n        onHover,\n        updateTriggers: {\n          getLineWidth: currentYear,\n          getFillColor: currentYear,\n        },\n      })\n    );\n\n  return layers;\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ResponsiveLine } from \"@nivo/line\";\n\nexport default function LineGraph(props) {\n  const { population } = useSelector((state) => state);\n  const data = [\n    {\n      id: \"Population\",\n      data: population.map((point) => ({ x: point.year, y: point.population })),\n    },\n  ];\n\n  return (\n    <div\n      style={{\n        height: 150,\n        marginBottom: -13,\n      }}\n    >\n      <MyResponsiveLine data={data} />\n    </div>\n  );\n}\n\nconst MyResponsiveLine = ({ data }) => (\n  <ResponsiveLine\n    data={data}\n    margin={{ top: 0, bottom: 0, right: 0, left: 0 }}\n    xScale={{ type: \"linear\", min: 1603, max: 1920 }}\n    xFormat={\".0f\"}\n    yScale={{\n      type: \"linear\",\n      min: 90000,\n      max: \"auto\",\n      stacked: true,\n      reverse: false,\n    }}\n    yFormat={\".3s\"}\n    axisTop={null}\n    enableArea\n    areaBaselineValue={90000}\n    lineWidth={2}\n    enableSlices={\"x\"}\n    axisRight={null}\n    axisBottom={null}\n    axisLeft={null}\n    colors={\"#17bdff\"}\n    enablePoints={false}\n    enableGridX={false}\n    enableGridY={false}\n    crosshairType={\"bottom\"}\n  />\n);\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateSelectedMap } from \"../../store/actions\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport LineGraph from \"../line-graph\";\n\nconst TimelineSlider = withStyles({\n  root: {\n    color: \"#17bdff\",\n    height: 4,\n  },\n  markLabel: {\n    fontSize: 14,\n    fontFamily: \"Avenir\",\n  },\n  mark: {\n    width: 2,\n    height: 5,\n    marginTop: -2,\n  },\n})(Slider);\n\nexport default function Timeline() {\n  const dispatch = useDispatch();\n  const { maps } = useSelector((state) => state);\n\n  const years = maps.map((map) => map.year);\n\n  const minYear = Math.min(...years);\n  const maxYear = Math.max(...years);\n\n  const marks = maps.map((map, i) => ({\n    value: map.year,\n    label:\n      i !== maps.length - 3 &&\n      (i === 0 || i === maps.length - 1 || maps[i - 1].year < map.year - 7)\n        ? map.year\n        : \"\",\n  }));\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        bottom: 200,\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        left: 0,\n        right: 0,\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"80%\",\n        height: 30,\n      }}\n    >\n      <LineGraph />\n      <TimelineSlider\n        defaultValue={1603}\n        onChange={(e, value) => dispatch(updateSelectedMap(value))}\n        valueLabelFormat={(value) => value}\n        valueLabelDisplay=\"auto\"\n        min={minYear}\n        max={maxYear}\n        step={null}\n        marks={marks}\n        track=\"normal\"\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateOpacity } from \"../../store/actions\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Slider from \"@material-ui/core/Slider\";\n\nconst StyledOpacitySlider = withStyles({\n  root: {\n    color: \"#17bdff\",\n    height: 4,\n  },\n})(Slider);\n\nexport default function OpacitySlider() {\n  const dispatch = useDispatch();\n  const { opacity } = useSelector((state) => state);\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: 40,\n        right: 40,\n        display: \"flex\",\n        width: 100,\n        height: 30,\n      }}\n    >\n      <StyledOpacitySlider\n        value={Math.round(opacity * 100)}\n        onChange={(e, value) => dispatch(updateOpacity(value / 100))}\n        getAriaValueText={(value) => value}\n        valueLabelFormat={(value) => value}\n        aria-labelledby=\"slider\"\n        valueLabelDisplay=\"auto\"\n        min={0}\n        max={100}\n        marks\n        track=\"inverted\"\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useSelector } from \"react-redux\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst StyledTitle = withStyles({\n  root: {\n    fontSize: 16,\n    fontFamily: \"Avenir\",\n  },\n})(Typography);\n\nconst StyledCreator = withStyles({\n  root: {\n    fontSize: 20,\n    fontFamily: \"Avenir\",\n  },\n})(Typography);\n\nexport default function Title() {\n  const { maps, selectedMap } = useSelector((state) => state);\n  const curMap = maps.find((el) => el.year === selectedMap);\n  return (\n    <>\n      {curMap && (\n        <div\n          onClick={() => window.open(curMap.source, \"_blank\")}\n          style={{\n            position: \"absolute\",\n            top: 30,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            width: \"50%\",\n            backgroundColor: \"rgb(255, 255, 255, .7)\",\n            border: \".5px solid grey\",\n            borderRadius: \"5px\",\n            padding: \"2px\",\n            cursor: \"pointer\",\n          }}\n        >\n          <StyledCreator>\n            {curMap &&\n              `${curMap.creator} (${curMap.origin && `${curMap.origin} `}${\n                curMap.year\n              })`}\n          </StyledCreator>\n          <StyledTitle>{curMap && curMap.title}</StyledTitle>\n        </div>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst StyledTitle = withStyles({\n  root: {\n    fontSize: 16,\n    fontFamily: \"Avenir\",\n  },\n})(Typography);\n\nexport default function Title(props) {\n  const { visible } = props;\n\n  return (\n    <>\n      {visible && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: 30,\n            left: 40,\n            width: \"15%\",\n            backgroundColor: \"rgb(255, 255, 255, .7)\",\n            border: \".5px solid grey\",\n            borderRadius: \"5px\",\n            padding: \"2px\",\n          }}\n        >\n          <StyledTitle>Hold shift to compare with base map</StyledTitle>\n        </div>\n      )}\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport Map from \"../components/map\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Timeline from \"../components/timeline\";\nimport OpacitySlider from \"../components/opacity-slider\";\nimport Title from \"../components/title\";\nimport Help from \"../components/help\";\nimport { toggleVisible } from \"../store/actions\";\n\nexport default function Home() {\n  const dispatch = useDispatch();\n  const { visible } = useSelector((state) => state);\n  const [helpVisible, setHelpVisible] = useState(true);\n\n  return (\n    <div\n      onKeyDown={(e) => {\n        if (e.nativeEvent.key === \"Shift\" && visible) {\n          dispatch(toggleVisible());\n          setHelpVisible(false);\n        }\n      }}\n      onKeyUp={(e) => {\n        e.nativeEvent.key === \"Shift\" && dispatch(toggleVisible());\n      }}\n    >\n      <Map />\n      <Title />\n      <Help visible={helpVisible} />\n      <Timeline />\n      <OpacitySlider />\n    </div>\n  );\n}\n","import React from \"react\";\nimport Home from \"./pages/home\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n  maps: [],\n  population: [],\n  selectedMap: 1603,\n  opacity: 0.8,\n  visible: true,\n  geojson: {},\n  hoveredObj: {},\n};\n\nexport default initialState;\n","import { createStore } from \"redux\";\nimport reducer from \"./reducer\";\n\nconst reduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nconst store = createStore(reducer, reduxDevTools);\n\nexport default store;\n","import {\n  UPDATE_MAPS,\n  UPDATE_SELECTED_MAP,\n  UPDATE_OPACITY,\n  UPDATE_POPULATION,\n  TOGGLE_VISIBLE,\n  UPDATE_GEOJSON,\n  UPDATE_HOVERED_OBJ,\n} from \"./actions\";\nimport initialState from \"./initialState\";\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_MAPS:\n      return { ...state, maps: action.data };\n    case UPDATE_POPULATION:\n      return { ...state, population: action.data };\n    case UPDATE_SELECTED_MAP:\n      return { ...state, selectedMap: action.data };\n    case UPDATE_OPACITY:\n      return { ...state, opacity: action.data };\n    case TOGGLE_VISIBLE:\n      return { ...state, visible: !state.visible };\n    case UPDATE_GEOJSON:\n      return { ...state, geojson: action.data };\n    case UPDATE_HOVERED_OBJ:\n      return { ...state, hoveredObj: action.data };\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}